import {API} from '/config'
import months from '/data/months.js'
import {Fragment, useEffect, useState} from 'react'

export default function PrintReport(){
	const [reportData, setReportData] = useState([])
	const [printData, setPrintData] = useState()
	const [years, setYears] = useState([])
	const [printParams, setPrintParams] = useState({
		year: '',
		month: ''
	})
	const tableColumns = [
		{
			key: 'sn',
			title: 'S/N'
		},
		{
			key: 'event',
			title: 'event/issue'
		},
		{
			key: 'troubleshoot',
			title: 'troubleshooting'
		},
		{
			key: 'date',
			title: 'date'
		},
		{
			key: 'remark',
			title: 'remark'
		}
	]

	useEffect(() => {
		fetch(API.READ_TASKS_DATA)
		.then(e => e.json())
		.then(({data}) => setReportData(data))
	}, [])

	useEffect(() => {
		setYears(reportData.reduce((accumulator, {date}) => {
			const year = new Date(date).getFullYear()

			if(accumulator.includes(year)) return [...accumulator]
			else return [...accumulator, year].sort()
		}, []))
	}, [reportData])

	function print(){
		const {year, month} = printParams
		const result = reportData.filter(({date}) => {
			const _month = new Date(date).getMonth() + 1
			const _year = new Date(date).getFullYear()

			return `${year}-${String(month).padStart(2, '0')}` === `${_year}-${String(_month).padStart(2, '0')}`
		})

		const newWindow = window.open(
			null,
			'_blank',
			'popup=yes,width=950,height=480'
		)
		const html = document.createElement('html')
		const head = document.querySelector('head').cloneNode(true)
		const body = document.createElement('body')
		const title = head.querySelector('title')
		const header = document.createElement('header')
		const table = document.createElement('table')
		const tableresponsive = document.createElement('div')

		title.textContent = `Work Report - ${String(month).padStart(2, '0')}/${year}`

		body.className = 'p-5 rounded-2x mb-5'

		header.className = 'py-5 px-3 bg-white'
		header.innerHTML = `
			<h2 class = ''>Work Report</h2>
			<p>Generated by: Musa-Azeez Taslim Eniola</p>
			<p>Period: ${String(month).padStart(2, '0')}-${year}</p>
		`

		table.className = 'table table-light table-borderless table-striped table-hover m-0'
		table.style = 'overflow: hidden; border-radius: 10px;'
		tableresponsive.className = 'table-responsive'

		const thead = document.createElement('thead')
		const tbody = document.createElement('tbody')

		thead.className = 'bg-cyan text-white'

		const tr = document.createElement('tr')

		tableColumns.forEach(({title}) => {
			const td = document.createElement('td')
			td.textContent = title
			td.className = 'py-4 bold text-capitalize'

			tr.appendChild(td)
		})

		thead.appendChild(tr)

		result.forEach((row, index) => {
			const tr = document.createElement('tr')

			tableColumns.map(({key}) => key).forEach((col) => {
				const td = document.createElement('td')

				td.textContent = col === 'sn' ? ++index : row[col]

				tr.appendChild(td)
			})

			tbody.appendChild(tr)
		})

		table.appendChild(thead)
		table.appendChild(tbody)

		tableresponsive.appendChild(table)

		body.appendChild(header)
		body.appendChild(tableresponsive)

		html.appendChild(head)
		html.appendChild(body)

		newWindow.document.title = `Work Report (${String(month).padStart(2, '0')}-${year})`
		newWindow.document.write(html.outerHTML)
		newWindow.print('Lorem ipsum dolor')
		newWindow.close()
		setPrintParams({year: '', month: ''})
	}

	return (
		<Fragment>
			<div className = 'row'>
				<div className = 'col-12 mb-5'>
					<div className = 'row'>
						<div className = 'col-auto col-sm-2'>
							<h6 className = 'gd-sage text-cyan'>Month</h6>
							<select value = {printParams.month} onChange = {({target: {value}}) => setPrintParams({
								...printParams,
								month: value
							})} className = 'p-3 b-block w-100 border rounded-lg text-capitalize'>
								<option value = ''>---</option>{
									months.map(({code, name}, index) => (
										<option value = {code} key = {index}>{name}</option>
									))
								}
							</select>
						</div>
						<div className = 'col-auto col-sm-2'>
							<h6 className = 'gd-sage text-cyan'>Year</h6>
							<select value = {printParams.year} onChange = {({target: {value}}) => setPrintParams({
								...printParams,
								year: value
							})}className = 'p-3 b-block w-100 border rounded-lg text-capitalize'>
								<option value = ''>---</option>{
									years.map((each, index) => (
										<option key = {index} value = {each}>{each}</option>
									))
								}
							</select>
						</div>
					</div>
				</div>
				<div className = 'col-12'>
					<button onClick = {() => print()} className = 'py-3 text-capitalize  px-5 bg-cyan text-white gd-sage shadow-sm rounded-lg border-0 outline-0'>print</button>
				</div>
			</div>
		</Fragment>
	)
}
